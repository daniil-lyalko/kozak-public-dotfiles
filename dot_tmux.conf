# Modern TMUX Configuration - Zellij-inspired UX
# =================================================

# Core Settings
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g mouse on
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g set-clipboard on
set -g history-limit 50000

# Change prefix to Ctrl-a (more ergonomic)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Fast config reload
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# ==========================================
# ZELLIJ-INSPIRED KEYBINDINGS
# ==========================================

# Intuitive pane splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Vi-style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing (holding prefix)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Quick pane management
bind x kill-pane
bind X kill-window
bind c new-window -c "#{pane_current_path}"

# Session management
bind S choose-session
bind s new-session
bind d detach-client

# Copy mode (vi-style)
setw -g mode-keys vi
bind Enter copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Smart clipboard integration (cross-platform)
if-shell 'test "$(uname -s)" = Darwin' {
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
} {
    if-shell 'test -n "$WSL_DISTRO_NAME"' {
        bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"
        bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"
    } {
        if-shell 'command -v xclip' {
            bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
            bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
        } {
            if-shell 'command -v xsel' {
                bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard --input"
                bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel --clipboard --input"
            }
        }
    }
}

# Quick help (shows available keybindings)
bind ? list-keys

# ==========================================
# VISUAL DESIGN - CATPPUCCIN MOCHA THEME
# ==========================================

# Color palette (Catppuccin Mocha)
set -g @catppuccin_rosewater "#f5e0dc"
set -g @catppuccin_flamingo "#f2cdcd"
set -g @catppuccin_pink "#f5c2e7"
set -g @catppuccin_mauve "#cba6f7"
set -g @catppuccin_red "#f38ba8"
set -g @catppuccin_maroon "#eba0ac"
set -g @catppuccin_peach "#fab387"
set -g @catppuccin_yellow "#f9e2af"
set -g @catppuccin_green "#a6e3a1"
set -g @catppuccin_teal "#94e2d5"
set -g @catppuccin_sky "#89dceb"
set -g @catppuccin_sapphire "#74c7ec"
set -g @catppuccin_blue "#89b4fa"
set -g @catppuccin_lavender "#b4befe"
set -g @catppuccin_text "#cdd6f4"
set -g @catppuccin_subtext1 "#bac2de"
set -g @catppuccin_subtext0 "#a6adc8"
set -g @catppuccin_overlay2 "#9399b2"
set -g @catppuccin_overlay1 "#7f849c"
set -g @catppuccin_overlay0 "#6c7086"
set -g @catppuccin_surface2 "#585b70"
set -g @catppuccin_surface1 "#45475a"
set -g @catppuccin_surface0 "#313244"
set -g @catppuccin_base "#1e1e2e"
set -g @catppuccin_mantle "#181825"
set -g @catppuccin_crust "#11111b"

# Pane styling
set -g pane-border-style "fg=#{@catppuccin_surface0}"
set -g pane-active-border-style "fg=#{@catppuccin_mauve}"

# Window styling
set -g window-status-style "fg=#{@catppuccin_subtext0},bg=#{@catppuccin_surface0}"
set -g window-status-current-style "fg=#{@catppuccin_base},bg=#{@catppuccin_mauve},bold"
set -g window-status-activity-style "fg=#{@catppuccin_yellow}"
set -g window-status-bell-style "fg=#{@catppuccin_red}"

# Window status format
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "

# ==========================================
# MODERN STATUS BAR - Context Aware
# ==========================================

# Status bar positioning and style
set -g status on
set -g status-position bottom
set -g status-justify centre
set -g status-style "bg=#{@catppuccin_base},fg=#{@catppuccin_text}"
set -g status-left-length 100
set -g status-right-length 100

# Left status: Session info + mode indicator
set -g status-left "#[fg=#{@catppuccin_base},bg=#{@catppuccin_blue},bold] #{?client_prefix,PREFIX,TMUX} #[fg=#{@catppuccin_blue},bg=#{@catppuccin_surface0}]#[fg=#{@catppuccin_text},bg=#{@catppuccin_surface0}] #S #[fg=#{@catppuccin_surface0},bg=#{@catppuccin_base}]"

# Right status: System info + time
set -g status-right "#[fg=#{@catppuccin_surface0},bg=#{@catppuccin_base}]#[fg=#{@catppuccin_text},bg=#{@catppuccin_surface0}] #(whoami)@#h #[fg=#{@catppuccin_green},bg=#{@catppuccin_surface0}]#[fg=#{@catppuccin_base},bg=#{@catppuccin_green},bold] %H:%M #[fg=#{@catppuccin_green},bg=#{@catppuccin_base}]"

# Message styling
set -g message-style "fg=#{@catppuccin_base},bg=#{@catppuccin_yellow}"
set -g message-command-style "fg=#{@catppuccin_base},bg=#{@catppuccin_peach}"

# ==========================================
# MODERN FEATURES
# ==========================================

# Smart pane switching with awareness of Vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Automatic session restore
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

# ==========================================
# PLUGIN MANAGEMENT
# ==========================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

# Plugin configurations
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'

# Load additional configurations
source-file ~/.config/tmux/layouts.conf

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

# ==========================================
# CONTEXT-SENSITIVE HELP
# ==========================================

# Create a popup window showing current keybindings
bind-key C-h display-popup -E -w 85 -h 30 '
echo "TMUX Quick Reference - Modern Zellij-Inspired Setup"
echo "===================================================="
echo ""
echo "PREFIX: Ctrl-a"
echo ""
echo "PANES:"
echo "  | - Split vertical    h/j/k/l - Navigate"
echo "  - - Split horizontal  H/J/K/L - Resize (hold prefix)"
echo "  x - Kill pane        Enter - Copy mode"
echo ""
echo "WINDOWS:"
echo "  c - New window       n/p - Next/Previous"
echo "  X - Kill window      , - Rename window"
echo ""
echo "SESSIONS:"
echo "  s - New session      S - Switch session"
echo "  d - Detach          ? - Show all keybindings"
echo ""
echo "LAYOUTS (Prefix + Letter):"
echo "  D - Dev layout       T - Triple pane"
echo "  E - Editor only      M - Monitoring"
echo "  G - Git workflow"
echo ""
echo "COPY MODE (vi-style):"
echo "  v - Visual select    y - Copy selection"
echo "  C-v - Rectangle      q - Exit copy mode"
echo ""
echo "SESSION TEMPLATES:"
echo "  ~/.config/tmux/sessions.sh dev [name] [path]"
echo "  ~/.config/tmux/sessions.sh fullstack [name] [path]"
echo ""
echo "Press any key to close..."
read -n 1
'